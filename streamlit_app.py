import streamlit as st
import numpy as np
import time

# --- 페이지 기본 설정 ---
st.set_page_config(
    page_title="확률 학습 웹 앱",
    page_icon="📊",
    layout="wide",
)

# --- 사이드바 메뉴 ---
with st.sidebar:
    st.header("📜 메뉴")
    page_choice = st.radio(
        "이동할 페이지를 선택하세요.",
        ("개요", "확률과 통계 핵심 개념"), # '확률 시뮬레이션'을 '개요'로 변경
        key="page_selector"
    )
    st.markdown("---")
    st.info("이 웹 앱은 확률적 사고의 이해를 돕기 위해 제작되었습니다.")


# ===============================================================================
# --- 1. 개요 페이지 (새로 추가) ---
# ===============================================================================
def render_overview_page():
    st.title("🎲 확률 시뮬레이션 및 학습 웹 앱")
    st.markdown("### 웹 앱에 오신 것을 환영합니다!")
    
    st.markdown("""
    '주사위를 던지면 왜 6분의 1의 확률로 1이 나올까?'  
    '로또 1등에 당첨될 확률은 얼마나 낮을까?'

    이러한 질문처럼, 우리는 수학적으로 확률을 계산할 수 있습니다.
    하지만 수많은 시행을 직접 해본다면 정말 그 확률에 가까워질까요?

    이 웹 앱은 **'큰 수의 법칙'** 원리를 바탕으로, 컴퓨터 시뮬레이션을 통해 확률을 눈으로 직접 확인하고, 더 나아가 복잡한 문제의 답을 어림해보는 경험을 제공하는 것을 목표로 합니다.
    """)
    
    st.markdown("---")
    
    col1, col2 = st.columns(2)

    with col1:
        st.subheader("🎯 이 앱의 목적")
        st.success("""
        - **체험을 통한 학습:** 딱딱한 공식 암기를 넘어, 시뮬레이션을 통해 확률 개념을 직관적으로 이해합니다.
        - **데이터 시각화:** 수많은 반복 시행의 결과를 그래프와 이미지로 확인하며 통계적 원리를 체득합니다.
        - **문제 해결 능력:** 몬테카를로 방법과 같이, 시뮬레이션을 복잡한 문제 해결에 적용하는 방법을 탐구합니다.
        """)

    with col2:
        st.subheader("🧭 사용 방법")
        st.warning("""
        - **개념 학습:** 먼저 '확률과 통계 핵심 개념' 페이지에서 확률의 기초를 다져보세요.
        - **시뮬레이션 실행:** 준비된 시뮬레이션(별도 파일)을 실행하며 '큰 수의 법칙'을 직접 확인해보세요.
        - **상호작용:** 시행 횟수와 같은 조건들을 직접 바꿔보며 결과가 어떻게 달라지는지 관찰해보세요.
        """)
    
    st.info("👈 왼쪽 사이드바 메뉴를 통해 '확률과 통계 핵심 개념' 페이지로 이동하여 학습을 시작해보세요!")


# ===============================================================================
# --- 2. 확률과 통계 핵심 개념 페이지 (기존과 동일) ---
# ===============================================================================
def render_concepts_page():
    st.title("📊 확률과 통계 핵심 개념")
    st.markdown("고등학교 과정에서 배우는 확률과 통계의 주요 개념들을 정리했습니다.")

    # --- 1. 순열과 조합 ---
    st.header("1. 순열(Permutation)과 조합(Combination)")
    st.markdown("""
    경우의 수를 계산하는 가장 기본적인 방법입니다. **'순서'를 고려하는지**가 핵심적인 차이입니다.
    """)
    col1, col2 = st.columns(2)
    with col1:
        st.subheader("순열 (Permutation)")
        st.markdown("서로 다른 n개에서 r개를 **순서를 생각하여** 나열하는 경우의 수입니다.")
        st.latex(r'''_nP_r = \frac{n!}{(n-r)!}''')
        st.info("""
        **예시:** 5명의 학생 중 **회장 1명, 부회장 1명**을 뽑는 경우
        - (A, B)와 (B, A)는 다른 경우로 취급됩니다. (순서 중요)
        - 계산: $$_5P_2 = \\frac{5!}{(5-2)!} = 5 \\times 4 = 20$$
        """)

    with col2:
        st.subheader("조합 (Combination)")
        st.markdown("서로 다른 n개에서 **순서를 생각하지 않고** r개를 뽑는 경우의 수입니다.")
        st.latex(r'''_nC_r = \frac{n!}{r!(n-r)!}''')
        st.info("""
        **예시:** 5명의 학생 중 **대표 2명**을 뽑는 경우
        - {A, B}와 {B, A}는 같은 경우로 취급됩니다. (순서 무관)
        - 계산: $$_5C_2 = \\frac{5!}{2!(5-2)!} = \\frac{5 \\times 4}{2 \\times 1} = 10$$
        """)
        st.warning("로또 1등 확률을 계산할 때 바로 이 조합이 사용됩니다. (45개 중 6개 순서 없이 뽑기)")

    st.markdown("---")

    # --- 2. 확률의 기본 ---
    st.header("2. 확률의 기본 성질")
    st.markdown("확률은 특정 사건이 일어날 가능성을 0과 1 사이의 수로 나타낸 것입니다.")
    st.latex(r'''P(A) = \frac{\text{(사건 A가 일어나는 경우의 수)}}{\text{(일어날 수 있는 모든 경우의 수)}}''')
    st.success("""
    - **주사위 던지기:** 주사위를 한 번 던져 '3'이 나올 확률은 $$\\frac{1}{6}$$ 입니다.
    - 어떤 사건도 일어나지 않을 확률은 0, 반드시 일어나는 사건의 확률은 1입니다. $$0 \le P(A) \le 1$$
    """)
    st.markdown("---")

    # --- 3. 조건부 확률과 독립 사건 ---
    st.header("3. 조건부 확률과 독립 사건")
    
    st.subheader("조건부 확률 (Conditional Probability)")
    st.markdown("어떤 사건 B가 일어났다는 **조건 하에** 다른 사건 A가 일어날 확률을 의미합니다.")
    st.latex(r'''P(A|B) = \frac{P(A \cap B)}{P(B)} \quad (단, P(B) > 0)''')
    st.info("예시: 흰 공 5개, 검은 공 4개가 든 주머니에서 공을 하나 뽑았더니 **흰 공이었을 때(조건)**, 그 공이 짝수 번호일 확률")

    st.subheader("독립 사건 (Independent Events)")
    st.markdown("두 사건 A, B가 **서로 영향을 주지 않을 때**, 두 사건은 독립이라고 합니다.")
    st.latex(r'''P(A \cap B) = P(A) \times P(B)''')
    st.success("""
    **예시:** 주사위를 두 번 던질 때, 첫 번째에 홀수가 나오는 사건과 두 번째에 짝수가 나오는 사건은 서로 독립입니다.
    - 이 웹 앱의 시뮬레이션은 모두 **독립 시행**을 가정합니다. 즉, 각 시행(주사위 던지기, 로또 구매)의 결과는 이전 시행에 영향을 받지 않습니다.
    """)
    st.markdown("---")
    
    # --- 4. 큰 수의 법칙 ---
    st.header("4. 큰 수의 법칙 (Law of Large Numbers)")
    st.markdown("""
    이 시뮬레이션 웹 앱의 존재 이유이자 가장 중요한 통계적 원리 중 하나입니다.
    > **어떤 독립적인 시행을 N번 반복할 때, N이 커질수록 통계적(경험적) 확률은 수학적 확률에 가까워진다.**
    """)
    st.warning("""
    - 주사위를 10번 던지면 1이 한 번도 안 나올 수 있지만, **100만 번** 던지면 1이 나온 횟수의 비율은 수학적 확률인 $$\\frac{1}{6} \\approx 16.7\\%$$에 매우 근접하게 됩니다.
    - **'시뮬레이션'**은 바로 이 '큰 수의 법칙'을 이용하여 복잡한 문제의 확률을 근사적으로 알아내는 강력한 도구입니다.
    """)


# ===============================================================================
# --- 페이지 라우팅 (선택된 페이지에 맞는 함수 호출) ---
# ===============================================================================
if page_choice == "개요":
    render_overview_page()
elif page_choice == "확률과 통계 핵심 개념":
    render_concepts_page()
